# GroceryApp



TODO
1) Display single recipe (and items) -- done
2) Display grocery list -- done
3) Show all recipes in a list -- done
4) All the components done already access real data -- done
    - might have to install state management - not yet
5) Show grocery list with all grocery items -- done
6) Have button to add recipe from recipe list to grocery list -- done
7) Select recipes from list and ingredients to grocery list -- done
    - this feature will receive recipe id from client. then it will do a query to fetch ingredients. then i will insert ingredients to grocery list. maybe get 
    ingredients from grocery list and do distinct or something
8) Ability to add recipes
9) Ability to clear grocerylist
10) Ability to make item as checked
11) style in bootstrap -- done

upcoming tasks
12) grocery list mark done
13) add items to grocery list
14) filter on done
15) separate by meat/fruits/veggies/and other stuff
    -in db
    -on grocery list
16) work on UI, put gradients etc
filter on dept and can combine filters
show tag to say what recipe ingredient is for
be able to swipe to mark done (ios)
use gliphicons for delete etc
have reoccurring items. so i'd have to put a new button to add reocurring items


auto complete for recipes


good todo sample
https://scotch.io/tutorials/create-a-simple-to-do-app-with-react


Commands
npm run start



Site address
http://localhost:3000/

Service API
http://webapiservices20171007054548.azurewebsites.net/Help
http://localhost:64755/Api/grocery


Themes
http://flatfull.com/themes/todo/index.html
lookup bootstrap themes


https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api

bootstrap
https://reactstrap.github.io/

color scheme
#682666
#CF0A2C
#E73E51
#FFCE00

