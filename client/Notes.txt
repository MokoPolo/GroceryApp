# GroceryApp



TODO
1) Display single recipe (and items) -- done
2) Display grocery list -- done
3) Show all recipes in a list -- done
4) All the components done already access real data -- done
    - might have to install state management - not yet
5) Show grocery list with all grocery items -- done
6) Have button to add recipe from recipe list to grocery list -- done
7) Select recipes from list and ingredients to grocery list -- done
    - this feature will receive recipe id from client. then it will do a query to fetch ingredients. then i will insert ingredients to grocery list. maybe get 
    ingredients from grocery list and do distinct or something
8) Ability to add recipes -- done
9) Ability to clear grocerylist -- done backend
10) Ability to make item as checked
11) style in bootstrap -- done
12) grocery list -- done
13) add items to grocery list -- done
14) clear button on form -- done
15) separate by meat/fruits/veggies/and other stuff -- done
    -in db
    -on grocery list
16) Be able to add items -- done

17) Have reoccurring items on grocery list. Once you hit button it will ask if you want something and if you click ok it will add it
    - actually show modal window. give option to click add. when they hit add do spinning thing. once added put a checkmark for that item --done
18) Filter on done -- done
19) Add air bnb lint --done
20) Figure a more efficient way to deploy. Maybe use CI on azure --done
21) Show quantity on recipes -- won't do
22) Create unit of measurement table and use unit of measurements on recipe -- won't do
23) Show quantities on grocery page. Can show different quantities (don't have to combine) -- done
24) Auto complete when adding groceries -- done

new todo <-------------
air bnb everything
redux
clean code
styling
categorization
find elegant way to reference font awesome in project. so far I included it in index.html


??) Show grocery totals -- won't do
??) Click on item on grocerylist and a popup will show letting me categorize it
??) Take a break and cleanup. 
??) Recipe page so can add new recipes and edit recipes



??) See if I need redux (I do need it)
??) Clean up code
??) Use async await?
??) Add tags next to ingredients which will be what recipe it belongs to
??) work on UI, put gradients etc
filter on dept and can combine filters
show tag to say what recipe ingredient is for
be able to swipe to mark done (ios)
use gliphicons for delete etc
have reoccurring items. so i'd have to put a new button to add reocurring items
show estimate for grocery cost
??) filter on done
??) Put spinning thing when updating grocery list cause it takes long

??) For recipe list you can star items so they always show up first
??) For recipe list you can put tags on recipes so when you search it can search on tags
auto complete for recipes

Aug 2018 TODO
- Make UI size correctly on phone
- Ability to add recipes
- spinner on autocomplete goes in circles
- Was decoupling components for best practices and making containers etc. Forgot where I left off. Stateless maybe?

Oct todo
- Convert to aspnet core and have webapi in solution
- Support users
- Build admin Site
- First thing from admin site delete recipe
- Second thing from admin site add new recipe




good todo sample
https://scotch.io/tutorials/create-a-simple-to-do-app-with-react


Commands
npm run start



Site address
http://localhost:3000/

Service API
http://webapiservices20171007054548.azurewebsites.net/Help
http://localhost:64755/Api/grocery


Themes
http://flatfull.com/themes/todo/index.html
lookup bootstrap themes


https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/enabling-cross-origin-requests-in-web-api

bootstrap
https://reactstrap.github.io/

To deploy
npm run build
copy all files and folders from C:\Dev\Repos\GroceryApp\client\build to azure 


color scheme
#682666
#CF0A2C
#E73E51
#FFCE00

node_modules/.bin/eslint --ext=js --ext=jsx --fix src/**
node_modules/.bin/eslint ./src/app.jsx
node_modules/.bin/esw --watch --ext .jsx ./src/app.jsx

watch only jsx files 
node_modules/.bin/esw --watch --ext .jsx --fix

font awesome
https://github.com/danawoodman/react-fontawesome/blob/master/api.md

Redux sample
https://github.com/reactjs/redux/tree/master/examples/async/src
